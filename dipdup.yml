spec_version: 1.2
package: juster

database:
  kind: postgres
  host: db
  port: 5432
  user: ${POSTGRES_USER:-dipdup}
  password: ${POSTGRES_PASSWORD:-changeme}
  database: ${POSTGRES_DB:-dipdup}

hasura:
  url: http://hasura:8080
  admin_secret: ${ADMIN_SECRET:-changeme}
  select_limit: ${SELECT_LIMIT:-1000}
  camel_case: true
  allow_aggregations: false
  rest: true

contracts:
  coinbase_storage_ithacanet:
    address: KT1UcwQtaztLSq8oufdXAtWpRTfFySCj7gFM
    typename: harbinger_storage
  juster_ithacanet:
    address: KT1Feq9iRBBhpSBdPF1Y7Sd7iJu7uLqqRf1A
    typename: juster
  pool_ithacanet:
    address: KT1GEfCcvPKhLe1vrpYZtua8eBpUsVjfiDRo
    typename: pool

datasources:
  tzkt_ithacanet:
    kind: tzkt
    url: https://api.ithacanet.tzkt.io
    buffer_size: 1
  coinbase:
    kind: coinbase
    http:
      cache: False

templates:
  harbinger:
    kind: big_map
    datasource: <datasource>
    handlers:
      - callback: on_oracle_storage_update
        contract: <contract>
        path: oracleData

  pool:
    kind: operation
    datasource: <datasource>
    contracts:
      - <contract>
    handlers:
      - callback: on_deposit_liquidity
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: depositLiquidity
      - callback: on_approve_liquidity
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: approveLiquidity
      - callback: on_cancel_liquidity
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: cancelLiquidity
      - callback: on_claim_liquidity
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: claimLiquidity
      - callback: on_withdraw_liquidity
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: withdrawLiquidity
      - callback: on_create_event
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: createEvent
          - type: transaction
            entrypoint: newEvent
            source: <contract>
            destination: <juster_core>
          - type: transaction
            entrypoint: provideLiquidity
            source: <contract>
            destination: <juster_core>
      - callback: on_pay_reward
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: payReward

  juster:
    kind: operation
    datasource: <datasource>
    contracts:
      - <contract>
    handlers:
      - callback: on_new_event
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: newEvent
      - callback: on_provide_liquidity
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: provideLiquidity
      - callback: on_bet
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: bet
      - callback: on_start_measurement
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: startMeasurementCallback
          - type: transaction
            source: <contract>
      - callback: on_close
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: closeCallback
          - type: transaction
            source: <contract>
      - callback: on_withdraw
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: withdraw
          - type: transaction
            source: <contract>
            optional: True
          - type: transaction
            source: <contract>
            optional: True
      - callback: on_force_majeure
        pattern:
          - type: transaction
            destination: <contract>
            entrypoint: triggerForceMajeure
          - type: transaction
            source: <contract>

indexes:
  harbinger_ithacanet:
    template: harbinger
    values:
      datasource: tzkt_ithacanet
      contract: coinbase_storage_ithacanet
  juster_ithacanet:
    template: juster
    values:
      datasource: tzkt_ithacanet
      contract: juster_ithacanet
  pool_ithacanet:
    template: pool
    values:
      datasource: tzkt_ithacanet
      contract: pool_ithacanet
      juster_core: juster_ithacanet

hooks:
  fetch_coinbase_candles:
    callback: fetch_coinbase_candles
    atomic: false
    args:
      datasource: str
      candle_interval: str
      since: str
      currency_pair: str
  refresh_views:
    callback: refresh_views
    atomic: false

jobs:
  coinbase_xtz_usd_1m_candles:
    hook: fetch_coinbase_candles
    crontab: "* * * * *"
    args:
      datasource: coinbase
      candle_interval: ONE_MINUTE
      since: ${CANDLES_SINCE:-2022-01-01T00:00:00}
      currency_pair: XTZ-USD
  coinbase_btc_usd_1m_candles:
    hook: fetch_coinbase_candles
    crontab: "* * * * *"
    args:
      datasource: coinbase
      candle_interval: ONE_MINUTE
      since: ${CANDLES_SINCE:-2022-01-01T00:00:00}
      currency_pair: BTC-USD
  coinbase_eth_usd_1m_candles:
    hook: fetch_coinbase_candles
    crontab: "* * * * *"
    args:
      datasource: coinbase
      candle_interval: ONE_MINUTE
      since: ${CANDLES_SINCE:-2022-01-01T00:00:00}
      currency_pair: ETH-USD
  refresh_views:
    hook: refresh_views
    crontab: "* * * * *"
