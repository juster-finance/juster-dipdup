version: "3.8"

services:

  indexer:
    build: .
    depends_on:
      - db
    volumes:
      - ./dipdup.yml:/home/dipdup/dipdup.yml
      - ./dipdup.docker.yml:/home/dipdup/dipdup.docker.yml
    command: [
      '-c', 'dipdup.yml',
      '-c', 'dipdup.docker.yml',
      'run', '--reindex'
    ]
    restart: always
    env_file: dipdup.env

  indexer-prod:
    build: .
    depends_on:
      - db
    volumes:
      - ./dipdup.yml:/home/dipdup/dipdup.yml
      - ./dipdup.docker.yml:/home/dipdup/dipdup.docker.yml
      - ./dipdup.prod.yml:/home/dipdup/dipdup.prod.yml
    command: [
      '-c', 'dipdup.yml',
      '-c', 'dipdup.docker.yml',
      '-c', 'dipdup.prod.yml',
      'run'
    ]
    restart: always
    env_file: dipdup.env

  db:
    image: timescale/timescaledb:latest-pg12
    ports:
      - 127.0.0.1:6423:5432
    restart: always
    volumes:
      - db:/var/lib/postgres/data
    env_file: dipdup.env 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:v2.0.1
    ports:
      - 127.0.0.1:44000:8080
    depends_on:
      - db
    restart: always
    env_file: dipdup.env
  
volumes:
  db: